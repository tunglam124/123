package test1;

import java.util.Random;
import java.util.Scanner;

public class MatrixPrimeFinder {

    // Nhập số dòng của ma trận
    public static int inputRows() {
        Scanner scanner = new Scanner(System.in);
        int rows;
        while (true) {
            System.out.print("Nhập số dòng của ma trận: ");
            try {
                rows = Integer.parseInt(scanner.nextLine());
                if (rows > 0) {
                    return rows;
                } else {
                    System.out.println("Số dòng phải lớn hơn 0. Vui lòng nhập lại.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Vui lòng nhập số nguyên hợp lệ.");
            }
        }
    }

    // Nhập số cột của ma trận
    public static int inputCols() {
        Scanner scanner = new Scanner(System.in);
        int cols;
        while (true) {
            System.out.print("Nhập số cột của ma trận: ");
            try {
                cols = Integer.parseInt(scanner.nextLine());
                if (cols > 0) {
                    return cols;
                } else {
                    System.out.println("Số cột phải lớn hơn 0. Vui lòng nhập lại.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Vui lòng nhập số nguyên hợp lệ.");
            }
        }
    }

    // Sinh ma trận với các giá trị ngẫu nhiên trong đoạn [-50, 50]
    public static int[][] generateMatrix(int rows, int cols) {
        Random random = new Random();
        int[][] matrix = new int[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix[i][j] = random.nextInt(101) - 50;
            }
        }
        return matrix;
    }

    // Xuất ma trận ra màn hình
    public static void printMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            for (int value : row) {
                System.out.print(value + " ");
            }
            System.out.println();
        }
    }

    // Kiểm tra số nguyên tố
    public static boolean isPrime(int n) {
        if (n <= 1) return false;
        if (n <= 3) return true;
        if (n % 2 == 0 || n % 3 == 0) return false;
        for (int i = 5; i * i <= n; i += 6) {
            if (n % i == 0 || n % (i + 2) == 0) return false;
        }
        return true;
    }

    // Tìm số nguyên tố đầu tiên trong ma trận và vị trí của nó
    public static int[] findFirstPrime(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                if (isPrime(matrix[i][j])) {
                    return new int[]{matrix[i][j], i, j};
                }
            }
        }
        return new int[]{-1, -1, -1}; // Không tìm thấy số nguyên tố
    }

    public static void main(String[] args) {
        int rows = inputRows();
        int cols = inputCols();
        int[][] matrix = generateMatrix(rows, cols);
        
        System.out.println("Ma trận được sinh ra:");
        printMatrix(matrix);
        
        int[] result = findFirstPrime(matrix);
        if (result[0] != -1) {
            System.out.println("Số nguyên tố đầu tiên là " + result[0] + " tại vị trí (" + result[1] + ", " + result[2] + ")");
        } else {
            System.out.println("Không có số nguyên tố trong ma trận.");
        }
    }
}
